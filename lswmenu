#!/usr/bin/env perl
# See LICENSE file for copyright and license details.
use strict;
use warnings;
#use diagnostics;
use IPC::Open2;

my $VERBOSE = 1;
my %WNDs = ();

sub lswin {
	my $args = shift || '';

	print "Open: 'lsw $args'\n" if $VERBOSE;

	open(my $lsw_fh, '-|', "lsw $args")
		or die "$0: couldn't open a pipe into lsw: $!\n";

	while (my $line = <$lsw_fh>) {
		chomp $line;

		my ($wid, $text) = ($1, $2)
			if $line =~ /^(0x[0-9a-h]{7}) (.*)$/;

		print "Window $wid: $text\n" if $VERBOSE;

		$WNDs{ $wid } = length($text) ? $text : "(null)";
	}

	close $lsw_fh;

	return keys %WNDs;
}

sub dmenu_sel_win {
	my @args = @_;
	my $output;

	print "Open: 'dmenu @args'\n" if $VERBOSE;

	open2(my $CHLD_OUT, my $CHLD_IN, 'dmenu', @args)
		or die "$0: open2() failed: $!\n";

	print $CHLD_IN "$WNDs{ $_ }\n" for sort keys %WNDs;
	close $CHLD_IN;

	while (<$CHLD_OUT>) {
		chomp;
		$output .= $_;
	}
	close $CHLD_OUT;

	print "Selected '$output'.\n" if $VERBOSE;

	return $output;
}

sub goto_sel_win {
	my ($switcher, $wid) = @_;

	if ($switcher eq 'xdotool') {
		print "Open: 'xdotool windowactivate $wid'\n" if $VERBOSE;
		system("xdotool windowactivate '$wid'");
	} else {
		print "Open: 'wmctrl -i -a $wid'\n" if $VERBOSE;
		system("wmctrl -i -a '$wid'");
	}
}

sub main {
	my $winswitch = 'wmctrl';
	my $lswargs;
	my @dmenuargs;

	for (@ARGV) {
		if    (/\bverbose\b/)         { $VERBOSE++             }
		elsif (/\bxdotool\b/)         { $winswitch = 'xdotool' }
		elsif (/\b(0x[0-9a-h]{7})\b/) { $lswargs  .= "$1 "     }
		else                          { push @dmenuargs, $_    }
	}

	lswin($lswargs)
		or die "$0: no windows available\n";

	my $sel = dmenu_sel_win(@dmenuargs)
		or die "$0: cannot select window\n";

	for my $wid (keys %WNDs) {
		if ($WNDs{ $wid } eq $sel) {
			goto_sel_win($winswitch, $wid) and last;
		}
	}
}

main() if not caller;
1;
